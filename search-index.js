var searchIndex = new Map(JSON.parse('[["ruv_fann",{"t":"EPPPEEEEEEPEEEEEEPPEGEEEEECNNCQNNNCNNNNCNNNCNCCCCQCNCQNNNNGPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPFPFFGFFFFFFPPPPPPONOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOOOONNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNOOOOOOOOONNNNNOONOOOOONOOONNOOOOONNNNNNNNNOOONNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNONNNNNNNNNNOOOOFNNNNNNNNNNNNONNNNNONNNNNNOPPPPPPPPGPPPPPPPPPGFFPPPPPPPPPGPPPPPPPPPGPPPPPPPPPPFGPPPGIPPPPPPPGPPPGGPONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNOOONNNOONNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPFFPPFFGFFPFPONNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOOOONNONNNNONNNNONOONOONNOOOONNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNOPPPPPFPPFFGPPPPGIPPPPFFFCNNNNNNNNNNNNNNNNNNNHCHNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOHHOONCNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHFFFNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNCNNNONNNNHNNNNNNNNNNNNONNNNNNHHHFFFCNNNNNNNNNNHHHHNNNNNNNNNNNONNNNNNNNNNNNNOONNNNONNNNNNNNNNNNNNNNNNNNNFNNNNNOHNNNNNNNOOOHHNNNNNPFGPPPNNNNNNNNNNNNNNONOONNNNNNPPPPPPGIPPPFFNNNNFFFNNNNNNNNNNOONNNNNNNNNNNNNNNNONNNNNNNNNNONHHNNNNNNNNNNNNNNNNHHFFFNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNONNNCNNOONNNNONNNNNNNNNNNNNNNHHFFFNNNNNNFNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNFFNNNNNNNNNNONNNNNNNNNNNNNNNNONNOOOOOOONNNNNNNNNNNNOPPFFGPPNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOFOONNNNNNNNONNNNNNNNNNONNNNNNONNNNONFFKFFPKFFFPFFFFKFKIFGPFOCOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNMNNNNOOOONNNNNNNNNNNNNNNNNNMNNNNOOONNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNMNNCONNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNOOOOOONNOOOOOOOOOOOOOOCMNNNNCMNNNNMNNNNMNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOFFOOOONNOOOONNOOOONNNNFHONNHNNNNNNNHNNNOHHHNNNNNOFNOOONOONOOOONNFOOOOOOOONNOONONN","n":["ActivationFunction","Backpropagation","Batch","BatchBackprop","CascadeConfig","CascadeError","CascadeNetwork","CascadeTrainer","Connection","ErrorCategory","IncrementalBackprop","Layer","Network","NetworkBuilder","NetworkError","Neuron","ParallelTrainingOptions","QuickProp","RProp","RuvFannError","TrainingAlgorithm","TrainingAlgorithmTrait","TrainingData","TrainingError","TrainingState","ValidationError","activation","borrow","borrow_mut","cascade","cascade_error","clone","clone_into","clone_to_uninit","connection","deref","deref_mut","drop","eq","errors","fmt","from","init","integration","into","io","layer","mock_types","network","network_error","neuron","to_owned","training","training_error","try_from","try_into","type_id","vzip","ActivationFunction","Cos","CosSymmetric","Elliot","ElliotSymmetric","Gaussian","GaussianSymmetric","Linear","LinearPiece","LinearPieceSymmetric","ReLU","ReLULeaky","Sigmoid","SigmoidSymmetric","Sin","SinSymmetric","Tanh","Threshold","ThresholdSymmetric","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","deserialize","drop","eq","fmt","from","hash","init","into","is_trainable","name","output_range","serialize","to_owned","try_from","try_into","type_id","vzip","CandidateGeneration","CandidateNeuron","CandidateTraining","CascadeBuilder","CascadeConfig","CascadeError","CascadeMetrics","CascadeNetwork","CascadeState","CascadeTrainer","CascadeTrainingRecord","CascadeTrainingResult","ConvergenceFailure","CorrelationCalculation","InvalidConfiguration","NoSuitableCandidate","OutputTraining","TopologyModification","activation","activation_derivative","best_candidate_correlation","best_correlation","best_error","bias","bias_gradient","bias_momentum","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","build","calculate_candidate_correlation_with_data","calculate_candidate_input_size","calculate_correlation","calculate_output","calculate_output_error","calculate_residuals","candidate_activations","candidate_learning_rate","","candidate_max_epochs","candidate_target_correlation","candidate_training_epochs","candidate_training_time","candidate_weight_range","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","config","","","convergence_reason","","correlation","correlation_calculation_time","current_epoch","current_error","default","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","determine_convergence_reason","drop","","","","","","","","","","extract_candidate_input","final_error","final_network","final_output_error","fmt","","","","","","","","","from","","","","","","","","","","generate_candidates","hidden_count","hidden_neuron_index","hidden_neurons_added","","init","","","","","","","","","","install_candidate","into","","","","","","","","","","max_hidden_neurons","","memory_usage_mb","metrics","","min_correlation_improvement","momentum","network","","network_modification_time","new","","","","num_candidates","","output","output_learning_rate","","output_max_epochs","output_target_error","output_training_epochs","output_training_time","parallel_candidates","","patience","peak_memory_usage_mb","pearson_correlation","random_seed","","rng","selected_activation","state","steepness","target_error","to_owned","","","","","","","to_string","total_backward_passes","total_forward_passes","total_training_time","train","train_candidate_epoch","train_candidates","train_candidates_parallel","train_candidates_sequential","train_output_epoch","train_output_weights","train_single_candidate","train_single_candidate_parallel","train_single_candidate_with_data","training_data","training_history","","","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","update_candidate_weights_simple","update_output_weights","update_weights","use_momentum","use_weight_decay","validate_config","validate_training_data","verbose","","vzip","","","","","","","","","","weight_decay","weight_gradients","weight_momentum","weights","Connection","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","from","from_neuron","init","into","new","serialize","set_weight","to_neuron","to_owned","try_from","try_into","type_id","update_weight","vzip","weight","Abort","Activation","Algorithm","CandidateGeneration","CandidateSelection","CandidateTraining","Cascade","","CascadeErrorCategory","CascadeParams","Compatibility","","Connections","Convergence","CorrelationCalculation","DataFormat","DataIo","Err","ErrorCategory","ErrorContext","ErrorLogger","Fallback","FileAccess","Format","Gradients","IncompatibleParams","InputData","InvalidConfig","Io","","IoErrorCategory","Iteration","Layers","LearningRate","Memory","","MissingParameter","Network","","NetworkConfig","NetworkErrorCategory","NetworkIo","Ok","OutOfRange","OutputData","OutputTraining","Parallel","","Performance","","Propagation","RecoveryContext","RecoveryStrategy","Reset","Retry","RetryWithModification","RuvFannError","RuvFannResult","Serialization","Skip","StopCriteria","Topology","TopologyModification","Training","","TrainingErrorCategory","TrainingParams","Validation","","ValidationError","ValidationErrorCategory","Weights","additional_info","borrow","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","checkpoints","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","current_retry","default","deref","","","","","","","","","","","","deref_mut","","","","","","","","","","","","drop","","","","","","","","","","","","epoch","eq","","","","","","fallback_available","fmt","","","","","","","","","","","","","from","","","","","","","","","","","","","","increment_retry","init","","","","","","","","","","","","into","","","","","","","","","","","","layer_index","log_error","log_level","log_simple_error","log_structured_error","max_retries","network_id","neuron_index","new","","","operation","performance_tracking","reset_retry_count","should_retry","source","strategy","structured_logging","timestamp","to_owned","","","","","","","","to_string","","try_from","","","","","","","","","","","","try_into","","","","","","","","","","","","type_id","","","","","","","","","","","","vzip","","","","","","","","","","","","with_epoch","with_info","with_layer","with_level","with_network_id","with_neuron","with_performance_tracking","with_structured_logging","actual","available_bytes","category","","","","","context","","","","details","fann_version","message","","","","","","","","","metric","operation","requested_bytes","source","thread_count","threshold","max","message","","","min","parameter","","value","AgentCompatibility","BenchmarkResult","CompatibilityTest","CrossAgentValidation","FannCompatibility","FannCompatibilityValidator","IntegrationConfig","IntegrationError","IntegrationResult","IntegrationTestSuite","PerformanceRegression","RegressionDetector","TestFailed","accuracy","add_baseline","add_test","api_coverage","baseline_duration","baseline_metrics","","benchmarks","borrow","","","","","","","","borrow_mut","","","","","","","","calculate_scores","check_regression","clone","","","clone_into","","","clone_to_uninit","","","compatibility_score","compatibility_tests","config","default","","deref","","","","","","","","deref_mut","","","","","","","","drop","","","","","","","","duration","errors","fmt","","","","","from","","","","","","","","generate_test_datasets","generate_test_networks","init","","","","","","","","into","","","","","","","","load_baseline_metrics","max_test_duration","memory_mb","memory_usage_mb","name","new","","","performance_ratio","performance_score","performance_threshold","phantom","","random_seed","run_all_tests","run_basic_network_test","run_benchmarks","run_cascade_integration_test","run_compatibility_tests","run_performance_benchmarks","run_stress_tests","","run_training_integration_test","test_basic_network_functionality","test_cascade_correlation_integration","test_cross_agent_compatibility","test_datasets","test_fann_compatibility","","test_fn","test_io_system_integration","test_networks","test_parallel","test_parallel_execution","test_training_algorithm_integration","tests_failed","tests_passed","threshold_percent","throughput","to_owned","","","to_string","total_duration","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","verbose","vzip","","","","","","","","warnings","Binary","CompressedBinary","CompressedFann","CompressionError","Dot","DotExporter","Err","Fann","FannReader","FannWriter","FileFormat","InvalidFileFormat","InvalidNetwork","InvalidTrainingData","Io","IoError","IoResult","Json","Ok","ParseError","SerializationError","TrainingDataReader","TrainingDataStreamReader","TrainingDataWriter","binary","borrow","","","","","","","","borrow_mut","","","","","","","","clone","clone_into","clone_to_uninit","compress_data","compression","decompress_data","default","","","","","","deref","","","","","","","","deref_mut","","","","","","","","dot_export","drop","","","","","","","","eq","error","fann_format","fmt","","","from","","","","","","","","","","","","","init","","","","","","","","into","","","","","","","","json","layout_direction","read_binary","read_json","show_indices","show_weights","source","streaming","to_owned","to_string","training_data","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","vzip","","","","","","","","write_binary","write_json","BinaryConfig","BinaryReader","BinaryWriter","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","compact","config","","default","","","deref","","","deref_mut","","","drop","","","fast","fmt","from","","","init","","","inspect","into","","","little_endian","new","","","read","read_binary","read_with_limit","serialized_size","to_owned","try_from","","","try_into","","","type_id","","","varint_encoding","vzip","","","with_config","","write","write_binary","serialized_size","validate_serializable","CompressedReader","CompressedWriter","CompressionConfig","analyze","best","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","compress_bytes","compress_data","decompress_bytes","decompress_data","default","deref","","","deref_mut","","","drop","","","fast","","finish","flush","fmt","from","","","get_mut","","get_ref","","init","","","inner","","into","","","into_inner","level","new","","","read","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_config","with_level","","write","CompressionStats","borrow","borrow_mut","clone","clone_into","clone_to_uninit","compressed_size","compression_ratio","deref","deref_mut","drop","fmt","from","init","into","original_size","ratio","savings_percent","space_savings","test_compression","to_owned","try_from","try_into","type_id","vzip","BottomToTop","DotExporter","LayoutDirection","LeftToRight","RightToLeft","TopToBottom","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","export_network","fmt","from","init","into","layout_direction","new","show_indices","show_weights","to_owned","try_from","try_into","type_id","vzip","with_options","CompressionError","Err","InvalidFileFormat","InvalidNetwork","InvalidTrainingData","Io","IoError","IoResult","Ok","ParseError","SerializationError","FannReader","FannWriter","new","","read_network","write_network","JsonConfig","JsonReader","JsonWriter","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","compact","config","","default","","","deref","","","deref_mut","","","drop","","","fmt","from","","","include_null","init","","","into","","","new","","","pretty","","read","read_json","read_json_with_options","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_config","","write","write_json","write_json_with_options","BufferedStreamReader","StreamStats","TrainingDataStreamReader","avg_bytes_per_sample","borrow","","","borrow_mut","","","buffer_len","buffer_size","","","bytes_read","clone","clone_into","clone_to_uninit","consume","default","deref","","","deref_mut","","","drop","","","fill_buf","fmt","from","","","init","","","inner","into","","","memory","new","","num_input","num_output","parameters_per_sample","read","read_batches","read_stream","samples_processed","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_buffer_size","with_capacity","estimate_batch_memory","optimal_batch_size","TrainingDataReader","TrainingDataStreamReader","TrainingDataWriter","new","","","read_data","read_stream","write_data","Layer","bias_neuron","bias_neuron_mut","borrow","borrow_mut","calculate","clone","clone_into","clone_to_uninit","connect_to","deref","deref_mut","deserialize","drop","eq","fmt","from","get_outputs","has_bias","init","into","neurons","new","num_regular_neurons","reset","serialize","set_activation_function","set_activation_steepness","set_inputs","size","to_owned","try_from","try_into","type_id","vzip","with_bias","MockNetwork","MockTrainingData","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","connection_rate","deref","","deref_mut","","deserialize","","drop","","eq","","fmt","","from","","init","","inputs","into","","layer_sizes","learning_rate","num_data","num_input","num_layers","num_output","outputs","serialize","","to_owned","","try_from","","try_into","","type_id","","vzip","","weights","InputSizeMismatch","InvalidLayerConfiguration","Network","NetworkBuilder","NetworkError","NoLayers","WeightCountMismatch","borrow","","","borrow_mut","","","build","clone","clone_into","clone_to_uninit","connection_rate","","","default","deref","","","deref_mut","","","deserialize","drop","","","fmt","","","from","","","from_bytes","get_total_connections","get_weights","hidden_layer","hidden_layer_with_activation","init","","","input_layer","into","","","layers","","layers_from_sizes","new","","num_inputs","num_layers","num_outputs","output_layer","output_layer_with_activation","randomize_weights","reset","run","run_batch","serialize","set_activation_function","set_activation_function_hidden","set_activation_function_output","set_activation_steepness_hidden","set_activation_steepness_output","set_training_algorithm","set_weights","to_bytes","to_owned","to_string","total_connections","total_neurons","train","try_from","","","try_into","","","type_id","","","vzip","","","actual","","expected","","Neuron","activation_function","activation_steepness","add_connection","borrow","borrow_mut","calculate","clear_connections","clone","clone_into","clone_to_uninit","connections","deref","deref_mut","deserialize","drop","eq","fmt","from","get_connection_weight","init","into","is_bias","new","new_bias","reset","serialize","set_connection_weight","set_value","sum","to_owned","try_from","try_into","type_id","value","vzip","BatchBackprop","BitFailStopCriteria","ErrorFunction","ExponentialDecay","IncrementalBackprop","InvalidData","LearningRateSchedule","MaeError","MseError","MseStopCriteria","NetworkError","ParallelTrainingOptions","Quickprop","Rprop","StepDecay","StopCriteria","TanhError","TrainingAlgorithm","TrainingCallback","TrainingData","TrainingError","TrainingFailed","TrainingState","algorithm_specific","backprop","batch_size","best_error","bias_step_sizes","bit_fail_limit","borrow","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","calculate","","","","calculate_error","","","","","call_callback","","","","","callback","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","count_bit_fails","","","","","decay","decay_rate","decrease_factor","default","","","delta_max","delta_min","delta_zero","deref","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","derivative","","","","drop","","","","","","","","","","","","","","","drop_rate","epoch","epochs_per_drop","error_function","","","","fmt","","","","","from","","","","","","","","","","","","","","","get_rate","","","helpers","increase_factor","init","","","","","","","","","","","","","","","initial_rate","","inputs","into","","","","","","","","","","","","","","","learning_rate","","","momentum","","mu","new","","num_threads","outputs","parallel_error_calc","parallel_gradients","previous_bias_deltas","","","previous_bias_gradients","","previous_weight_deltas","","","previous_weight_gradients","","quickprop","restore_state","","","","","rprop","save_state","","","","","set_callback","","","","","should_stop","","","target_bit_fail","target_error","to_owned","","","","","","to_string","train_epoch","","","","","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","weight_step_sizes","BatchBackprop","IncrementalBackprop","callback","","error_function","","initialize_deltas","","learning_rate","","momentum","","new","","previous_bias_deltas","","previous_weight_deltas","","with_error_function","","with_momentum","","SimpleNetwork","apply_updates_to_network","biases","borrow","borrow_mut","calculate_gradients","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","forward_propagate","from","init","into","layer_sizes","network_to_simple","sigmoid","sigmoid_derivative","to_owned","try_from","try_into","type_id","vzip","weights","Quickprop","calculate_quickprop_delta","callback","decay","error_function","initialize_state","learning_rate","mu","new","previous_bias_deltas","previous_bias_gradients","previous_weight_deltas","previous_weight_gradients","with_error_function","with_parameters","Rprop","bias_step_sizes","callback","decrease_factor","delta_max","delta_min","delta_zero","error_function","increase_factor","initialize_state","new","previous_bias_gradients","previous_weight_gradients","update_step_size","weight_step_sizes","with_error_function","with_parameters"],"q":[[0,"ruv_fann"],[58,"ruv_fann::activation"],[102,"ruv_fann::cascade"],[390,"ruv_fann::connection"],[417,"ruv_fann::errors"],[722,"ruv_fann::errors::RuvFannError"],[750,"ruv_fann::errors::ValidationError"],[758,"ruv_fann::integration"],[946,"ruv_fann::io"],[1104,"ruv_fann::io::binary"],[1169,"ruv_fann::io::binary::inspect"],[1171,"ruv_fann::io::compression"],[1242,"ruv_fann::io::compression::analyze"],[1267,"ruv_fann::io::dot_export"],[1282,"ruv_fann::io"],[1283,"ruv_fann::io::dot_export"],[1287,"ruv_fann::io"],[1291,"ruv_fann::io::dot_export"],[1296,"ruv_fann::io"],[1303,"ruv_fann::io::error"],[1305,"ruv_fann::io"],[1308,"ruv_fann::io::fann_format"],[1310,"ruv_fann::io"],[1314,"ruv_fann::io::json"],[1378,"ruv_fann::io::streaming"],[1444,"ruv_fann::io::streaming::memory"],[1446,"ruv_fann::io::training_data"],[1449,"ruv_fann::io"],[1455,"ruv_fann::layer"],[1491,"ruv_fann::mock_types"],[1543,"ruv_fann::network"],[1632,"ruv_fann::network::NetworkError"],[1636,"ruv_fann::neuron"],[1672,"ruv_fann::training"],[2012,"ruv_fann::training::backprop"],[2014,"ruv_fann::training"],[2034,"ruv_fann::training::helpers"],[2061,"ruv_fann::training::quickprop"],[2062,"ruv_fann::training"],[2076,"ruv_fann::training::rprop"],[2077,"ruv_fann::training"],[2093,"core::fmt"],[2094,"core::result"],[2095,"core::any"],[2096,"serde::de"],[2097,"core::hash"],[2098,"serde::ser"],[2099,"num_traits::float"],[2100,"core::marker"],[2101,"alloc::vec"],[2102,"core::time"],[2103,"core::clone"],[2104,"alloc::string"],[2105,"core::option"],[2106,"rand::rngs::std"],[2107,"core::cmp"],[2108,"std::collections::hash::map"],[2109,"log"],[2110,"core::convert"],[2111,"core::error"],[2112,"std::time"],[2113,"core::ops::function"],[2114,"core::default"],[2115,"alloc::boxed"],[2116,"std::io"],[2117,"core::num::error"],[2118,"core::num::dec2flt"],[2119,"std::io::error"],[2120,"serde_json::error"],[2121,"bincode::error"],[2122,"flate2::gz::read"],[2123,"flate2::gz::write"],[2124,"core::str::traits"],[2125,"std::io::buffered::bufreader"],[2126,"rand::distributions::uniform"],[2127,"core::ops::arith"]],"i":"`f00``````0``````00````````00``000`0000`000`0``````0``0000`Ah000000000000000000000000000000000000000000Dl`0`````````000000Bd0BhBjBl3330Bn5Dd3C`65D`Dh549362871045558552422271236287103628710362871054370815646215493628710549362871055493628710500799362871054936287105576054936287105549362871042150225315438428422271422154257384362871091115555555555558054936287105493628710549362871055822554254936287102888`Eh0000000000000000000000000GbFfFhFj00CfG``Fl21543GfFnADj```911723254`787542543`1023654548``999``1978654`354``8F`Gd7:9853641;Fd18;:964752<00;:96472<;:96472<;:96472<0118;:964752<018;:964752<018;:964752<02;:9647088;:9647552<01888;:964752<0018;:964752<018;:964752<02111102212021008012;:96472<8518;:964752<018;:964752<018;:964752<018;:964752<022212211HdHfHhHjHlHnI`432Ib2Id654321780807218IfIhIjIl33In4Jh``00`````0`0J`JbJd02Jl2Jn12Kd46Kb26341570263502602602624340341570263415702634157026627702634157026333415702634157026306213456203103303433033333301330332256026723415702634157026341570260341570262Kj00Ln1`Kl2```1111``2011````LbLdLfLhLjLl7854321078888```5432105432107854321078`543210788``77854321077777785432107854321078`5``557`87`54321078543210785432107854321078`````MnN`Ml21000002121021021021000210210`21002102`2102102102100210211```````NbNhNd2102222````21021021022200210210101021010212102121021021021020020`O`00000`0000000000``00000Mj``000000000000=0000====00000=?>????``>??``<;<;```OjOlOh21000002121021021021002100210210210002``0210210210210211`````OnA@bA@`21020010222201102102102021021020102`102220112210210210210210`````LhLjLl201`A@n0000000000000000000000000000000000``ObA@l101010101101010101010101001011001001010101010101Gj0```00AAb1Cd1201000110112012001202201200001112011201011000011000000000000002000120120120120AB`ABb10`AA`0000000000000000000000000000000000`````Gh````0``````````0`ABd`ABf1ABhABjAClACnADf3ACfAChACj7Cb9;ABnAC`ACb=987:654;3<>210=ABl321ACd876=0876=876=5>432?5>432?5>432?0876=6;=6=>===;:9<876=5>Gh543ABd=<;>:98?7ABf276514765>=<?;:9ABh9138762>2><;:091332?>=ABj=<;1:249873AD`AClACn`410ADf4ACfAChACj8Cb:<ABnAC`ACb>983987;654<3=?210>65465498=3==6544<6544<`ACd765=`0765=0765=ADd9==95?432ABdGh3:98ABh>=<ABj<;:19ABf39874AClACnADf4ACfAChACj8Cb7:ABnAC`ACb>987;654<3:=210>987;654<3:=210><``65656565656565656565``ADh00`0000000`0000```000000`55555555555555`================","f":"```````````````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}``{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}`{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{f}}{b{f}}}n}`{{{b{f}}{b{dA`}}}Ab}{cc{}}{{}l}`{{}c{}}``````{bc{}}``{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}```````````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ah}}}Ah}{{b{b{dc}}}h{}}{{bj}h}{{}Ah}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{Ad{Ah}}}Aj}{lh}{{{b{Ah}}{b{Ah}}}n}{{{b{Ah}}{b{dA`}}}Ab}{cc{}}{{{b{Ah}}{b{dc}}}hAl}{{}l}{{}c{}}{{{b{Ah}}}n}{{{b{Ah}}}{{b{An}}}}{{{b{Ah}}}{{B`{{b{An}}{b{An}}}}}}{{{b{Ah}}c}AdBb}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}``````````````````{BdAh}{{{b{{Bd{c}}}}c}cBf}{Bh}{Bj}{Bl}{Bd}00{b{{b{c}}}{}}000000000{{{b{d}}}{{b{dc}}}{}}000000000{{{Bn{c}}}{{C`{c}}}Bf}{{{b{{Bl{c}}}}{b{{Bd{c}}}}{b{{Cb{c}}}}{b{{Cd{c}}}}}{{Ad{cCf}}}{BfChCj}}{{{b{{Bl{c}}}}}lBf}{{{b{d{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cn{{Cl{c}}}}}}}{{Ad{cCf}}}Bf}{{{b{{Bd{c}}}}{b{{Cn{c}}}}}cBf}{{{b{{Bl{c}}}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{d{Bl{c}}}}}{{Ad{{Cl{{Cl{c}}}}Cf}}}Bf}{C`Cl}{{{Bn{c}}c}{{Bn{c}}}Bf}{C`}{C`l}1{Bhl}{D`Db}{C`B`}{{{b{{Dd{c}}}}}{{Dd{c}}}{DfBf}}{{{b{{Bj{c}}}}}{{Bj{c}}}{DfBf}}{{{b{{C`{c}}}}}{{C`{c}}}{DfBf}}{{{b{{Bd{c}}}}}{{Bd{c}}}{DfBf}}{{{b{{Bh{c}}}}}{{Bh{c}}}{DfBf}}{{{b{D`}}}D`}{{{b{{Dh{c}}}}}{{Dh{c}}}{DfBf}}{{b{b{dc}}}h{}}000000{{bj}h}000000{BlC`}{BnC`}{DdC`}{BhDj}{DhDj}{Bd}{D`Db}{Bll}{Bj}{{}{{Bn{c}}}Bf}{{}{{Bj{c}}}Bf}{{}{{C`{c}}}Bf}{{}D`}{l{{b{c}}}{}}000000000{l{{b{dc}}}{}}000000000{{{b{{Bl{c}}}}}DjBf}{lh}000000000{{{b{{Bl{c}}}}{b{{Cn{c}}}}}{{Cl{c}}}Bf}{Dh}{DhCd}{Bh}{{{b{Dl}}{b{dA`}}}Ab}0{{{b{{Dd{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{Bj{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{C`{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{Bd{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{Bh{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{D`}}{b{dA`}}}Ab}{{{b{{Dh{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}000000000{{{b{d{Bl{c}}}}}{{Ad{{Cl{{Bd{c}}}}Cf}}}Bf}{Bll}{Bhl}{Bjl}{Dhl}{{}l}000000000{{{b{d{Bl{c}}}}{Bd{c}}}{{Ad{hCf}}}Bf}{{}c{}}000000000{{{Bn{c}}l}{{Bn{c}}}Bf}{C`l}{D`E`}{BlD`}{DhD`}{C`}0{BlCd}{DdCd}{D`Db}{{{C`{c}}{Cd{c}}{Cb{c}}}{{Ad{{Bl{c}}Dl}}}Bf}{{}{{Bn{c}}}Bf}{{{Cd{c}}{C`{c}}}{{Dd{c}}}Bf}{{lAh{B`{cc}}{Ed{Eb}}}{{Bd{c}}}Bf}<;{Bd}{{{Bn{c}}c}{{Bn{c}}}Bf}9=9{Bhl}7{{{Bn{c}}n}{{Bn{c}}}Bf}{C`n}{C`l}{D`E`}{{{b{{Bl{c}}}}{b{{Cn{c}}}}{b{{Cn{c}}}}}{{Ad{cCf}}}Bf}{{{Bn{c}}Eb}{{Bn{c}}}Bf}{C`Ed}{BlEf}{BhAh}{DdBj}<;{bc{}}000000{bDj}{D`l}0{D`Db}{{{b{d{Bl{c}}}}}{{Ad{{Dh{c}}Cf}}}Bf}{{{b{d{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cn{{Cl{c}}}}}}}{{Ad{hCf}}}Bf}{{{b{d{Bl{c}}}}}{{Ad{{Bd{c}}Cf}}}Bf}{{{b{d{Bl{c}}}}{b{d{Cn{{Bd{c}}}}}}}{{Ad{hCf}}}{BfChCj}}{{{b{d{Bl{c}}}}{b{d{Cn{{Bd{c}}}}}}}{{Ad{hCf}}}Bf}{{{b{d{Bl{c}}}}}{{Ad{cCf}}}Bf}{{{b{d{Bl{c}}}}}{{Ad{hCf}}}Bf}{{{b{d{Bl{c}}}}{b{d{Bd{c}}}}}{{Ad{hCf}}}Bf}{{{b{{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cb{c}}}}{b{{C`{c}}}}}{{Ad{hCf}}}Bf}{{{b{{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cb{c}}}}{b{{C`{c}}}}{b{{Cd{c}}}}}{{Ad{hCf}}}{BfChCj}}{BlCb}{BlCl}{BdCl}{DhCl}{c{{Ad{e}}}{}{}}000000000{{}{{Ad{c}}}{}}000000000{bAf}000000000{{{b{{Bl{c}}}}{b{d{Bd{c}}}}{b{{Cb{c}}}}{b{{Cd{c}}}}c}{{Ad{hCf}}}{BfChCj}}{{{b{d{Bl{c}}}}{b{{Cn{c}}}}{b{{Cn{c}}}}{b{{Cn{c}}}}}{{Ad{hCf}}}Bf}{{{b{d{Bd{c}}}}cnc}hBf}{C`n}0{{{b{{C`{c}}}}}{{Ad{hDl}}}Bf}{{{b{{Cb{c}}}}{b{{Cd{c}}}}}{{Ad{hDl}}}Bf}{{{Bn{c}}n}{{Bn{c}}}Bf}3{{}c{}}000000000{C`}===`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Eh{c}}}}}{{Eh{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{Ad{{Eh{e}}}}}Aj{EjBf}}{lh}{{{b{{Eh{c}}}}{b{{Eh{c}}}}}n{ElBf}}{{{b{{Eh{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}{Ehl}{{}l}{{}c{}}{{llc}{{Eh{c}}}Bf}{{{b{{Eh{c}}}}e}Ad{EnBf}Bb}{{{b{d{Eh{c}}}}c}hBf}5{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}4{{}c{}}{Eh}````````````````````````````````````````````````````````````````````````{F`Fb}{b{{b{c}}}{}}00000000000{{{b{d}}}{{b{dc}}}{}}00000000000{FdCl}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{F`}}}F`}{{{b{Gb}}}Gb}{{b{b{dc}}}h{}}0000000{{bj}h}0000000{Fdl}{{}Gd}{l{{b{c}}}{}}00000000000{l{{b{dc}}}{}}00000000000{lh}00000000000{F`Ed}{{{b{Ff}}{b{Ff}}}n}{{{b{Fh}}{b{Fh}}}n}{{{b{Fj}}{b{Fj}}}n}{{{b{Fl}}{b{Fl}}}n}{{{b{Fn}}{b{Fn}}}n}{{{b{G`}}{b{G`}}}n}{Fdn}{{{b{Cf}}{b{dA`}}}Ab}0{{{b{Ff}}{b{dA`}}}Ab}{{{b{Fh}}{b{dA`}}}Ab}{{{b{Fj}}{b{dA`}}}Ab}{{{b{Fl}}{b{dA`}}}Ab}{{{b{Fn}}{b{dA`}}}Ab}{{{b{G`}}{b{dA`}}}Ab}{{{b{Gf}}{b{dA`}}}Ab}0{{{b{F`}}{b{dA`}}}Ab}{{{b{Gb}}{b{dA`}}}Ab}{{{b{Fd}}{b{dA`}}}Ab}{cc{}}{GhCf}1{GjCf}2222222222{{{b{dFd}}}h}{{}l}00000000000{{}c{}}00000000000{F`Ed}{{{b{Gd}}{b{Cf}}{Ed{{b{F`}}}}}h}{GdGl}11{Fdl}33{{}Gd}{cF`{{Gn{Dj}}}}{GbFd}{F`Dj}{Gdn};{{{b{Fd}}}n}{{{b{Cf}}}{{Ed{{b{H`}}}}}}{FdGb}3{F`Hb}{bc{}}0000000{bDj}0{c{{Ad{e}}}{}{}}00000000000{{}{{Ad{c}}}{}}00000000000{bAf}00000000000{{}c{}}00000000000{{F`l}F`}{{F`ce}F`{{Gn{Dj}}}{{Gn{Dj}}}}1{{GdGl}Gd}{{F`c}F`{{Gn{Dj}}}}3{{Gdn}Gd}0{HdE`}{HfEd}{HhFf}{HjFh}{HlFj}{HnFl}{I`Fn}{HhEd}{HjEd}{HlEd}{IbEd}{HnCl}{IdEd}{HhDj}{HjDj}{HlDj}{HnDj}{I`Dj}{IbDj}{HfDj}{HdDj}{IdDj}10{HfEd}{I`Ed}{Ibl}{HdE`}{IfE`}{IhDj}{IjDj}{IlDj}3{IfDj}{InDj}5`````````````{J`E`}{{{b{dJb}}DjE`}h}{{{b{d{Jd{c}}}}Dje}hBf{{Jj{}{{Jf{{Ad{hJh}}}}}}}}{JdFb}{J`Ed}{JlEd}{JbFb}{JnFb}{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{{{b{{Jl{c}}}}{b{dJn}}}{{Ad{hJh}}}{BfChK`}}{{{b{Jb}}{b{An}}E`}{{Ed{E`}}}}{{{b{Kb}}}Kb}{{{b{Jn}}}Jn}{{{b{J`}}}J`}{{b{b{dc}}}h{}}00{{bj}h}00{JnE`}{JdCl}{JlKb}{{}{{Jd{c}}}Bf}{{}Kb}{l{{b{c}}}{}}0000000{l{{b{dc}}}{}}0000000{lh}0000000{J`Db}{JnCl}{{{b{Jh}}{b{dA`}}}Ab}0{{{b{Kb}}{b{dA`}}}Ab}{{{b{Jn}}{b{dA`}}}Ab}{{{b{J`}}{b{dA`}}}Ab}{cc{}}0000000{{{b{d{Jl{c}}}}}{{Ad{hJh}}}{BfChK`}}0{{}l}0000000{{}c{}}0000000{{{b{d{Jl{c}}}}{b{An}}}{{Ad{hJh}}}{BfChK`}}{KbDb}{J`E`}{JnE`}{KdDj}{Kb{{Jl{c}}}{BfChK`}}{{}{{Jd{c}}}Bf}{E`Jb}{J`Ed}5{KbE`}{JlKf}{KdKf}{KbEd}{{{b{d{Jl{c}}}}}{{Ad{JnJh}}}{BfChK`}}{{{b{{Jl{c}}}}{b{d{Cd{c}}}}}{{Ad{J`Jh}}}{BfChK`}}{Kbn}{{{b{{Jl{c}}}}{Cd{c}}{Cb{c}}}{{Ad{J`Jh}}}{BfChK`}}{{{b{{Jd{c}}}}}{{Ad{E`Jh}}}Bf}{{{b{{Jl{c}}}}{b{dJn}}}{{Ad{hJh}}}{BfChK`}}032000{JlCl}14{KdKh}21522{Jnl}0{JbE`}{J`E`}{bc{}}00{bDj}{JnDb}{c{{Ad{e}}}{}{}}0000000{{}{{Ad{c}}}{}}0000000{bAf}0000000>{{}c{}}0000000{JnCl}`````````````````````````{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{{{b{Kj}}}Kj}{{b{b{dc}}}h{}}{{bj}h}{{{b{dc}}{b{de}}}{{Kl{h}}}KnL`}`0{{}Lb}{{}Ld}{{}Lf}{{}Lh}{{}Lj}{{}Ll}{l{{b{c}}}{}}0000000{l{{b{dc}}}{}}0000000`{lh}0000000{{{b{Kj}}{b{Kj}}}n}``{{{b{Ln}}{b{dA`}}}Ab}0{{{b{Kj}}{b{dA`}}}Ab}{cc{}}00000{M`Ln}1{MbLn}{MdLn}{MfLn}{MhLn}5{{}l}0000000{{}c{}}0000000`{LbMj}{{{b{dc}}}{{Kl{e}}}KnEj}0{Lbn}0{{{b{Ln}}}{{Ed{{b{H`}}}}}}`{bc{}}{bDj}`{c{{Ad{e}}}{}{}}0000000{{}{{Ad{c}}}{}}0000000{bAf}0000000{{}c{}}0000000{{{b{c}}{b{de}}}{{Kl{h}}}EnL`}0```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Ml}}}Ml}{{b{b{dc}}}h{}}{{bj}h}{{}Ml}{MnMl}{N`Ml}{{}Mn}{{}N`}4{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{lh}007{{{b{Ml}}{b{dA`}}}Ab}{cc{}}00{{}l}00`{{}c{}}00{Mln}98<{{{b{Mn}}{b{dc}}}{{Kl{e}}}KnEj}{{{b{dc}}}{{Kl{e}}}KnEj}{{{b{Mn}}{b{dc}}Eb}{{Kl{e}}}KnEj}{{{b{N`}}{b{c}}}{{Kl{Eb}}}En}{bc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}008{{}c{}}00{MlMn}{MlN`}{{{b{N`}}{b{c}}{b{de}}}{{Kl{h}}}EnL`}{{{b{c}}{b{de}}}{{Kl{h}}}EnL`}{{{b{c}}}{{Kl{Eb}}}En}{{{b{c}}}{{Kl{h}}}En}````{{}Nb}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Nb}}}Nb}{{b{b{dc}}}h{}}{{bj}h}{{{b{{Cn{j}}}}}{{Kl{{Cl{j}}}}}}{{{b{dc}}{b{de}}}{{Kl{h}}}KnL`}107{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{lh}00:{Nbn}{{{Nd{c}}}{{Nf{c}}}L`}{{{b{d{Nd{c}}}}}{{Nf{h}}}L`}{{{b{Nb}}{b{dA`}}}Ab}{cc{}}00{{{b{d{Nh{c}}}}}{{b{d{Nj{c}}}}}Kn}{{{b{d{Nd{c}}}}}{{b{dc}}}L`}{{{b{{Nh{c}}}}}{{b{{Nj{c}}}}}Kn}{{{b{{Nd{c}}}}}{{b{c}}}L`}{{}l}00{NhNj}{NdNl}{{}c{}}00{{{Nh{c}}}{{Nj{c}}}Kn}{NbNn}{c{{Nh{c}}}Kn}{c{{Nd{c}}}L`}{{}Nb}{{{b{d{Nh{c}}}}{b{d{Cn{j}}}}}{{Nf{l}}}Kn}{bc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00{{}c{}}00{{cNb}{{Nd{c}}}L`}{{cNn}{{Nd{c}}}L`}{NnNb}{{{b{d{Nd{c}}}}{b{{Cn{j}}}}}{{Nf{l}}}L`}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{O`}}}O`}{{b{b{dc}}}h{}}{{bj}h}{O`l}{{ll}E`}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{O`}}{b{dA`}}}Ab}{cc{}}{{}l}{{}c{}}8{O`E`}08{{{b{{Cn{j}}}}}{{Kl{O`}}}}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}``````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Mj}}}Mj}{{b{b{dc}}}h{}}{{bj}h}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{Mj}}{b{Mj}}}n}{{{b{Lb}}{b{Ob}}{b{dc}}}{{Kl{h}}}L`}{{{b{Mj}}{b{dA`}}}Ab}{cc{}}{{}l}{{}c{}}{LbMj}{{}Lb}{Lbn}0{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}{{nnMj}Lb}`````````````{{}Ld}{{}Lf}{{{b{Ld}}{b{dc}}}{{Kl{{Cd{e}}}}}Kn{BfOd}}{{{b{Lf}}{b{{Cd{c}}}}{b{de}}}{{Kl{h}}}{BfOf}L`}```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Oh}}}Oh}{{b{b{dc}}}h{}}{{bj}h}{{}Oh}{OjOh}{OlOh}{{}Oj}{{}Ol}4{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{lh}00{{{b{Oh}}{b{dA`}}}Ab}{cc{}}00{Ohn}{{}l}00{{}c{}}0098<<2{{{b{Oj}}{b{dc}}}{{Kl{e}}}KnEj}{{{b{dc}}}{{Kl{e}}}KnEj}{{{b{dc}}n}{{Kl{e}}}KnEj}{bc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00{{}c{}}00{OhOj}{OhOl}{{{b{Ol}}{b{c}}{b{de}}}{{Kl{h}}}EnL`}{{{b{c}}{b{de}}}{{Kl{h}}}EnL`}{{{b{c}}{b{de}}n}{{Kl{h}}}EnL`}```{{{b{On}}}E`}{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{{A@`{c}}}}}lKn}0{A@bl}{A@`l}{Onl}{{{b{On}}}On}{{b{b{dc}}}h{}}{{bj}h}{{{b{d{A@`{c}}}}l}hKn}{{}A@b}{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{lh}00{{{b{d{A@`{c}}}}}{{Nf{{b{{Cn{j}}}}}}}Kn}{{{b{On}}{b{dA`}}}Ab}{cc{}}00{{}l}00{A@`A@d}{{}c{}}00`9{c{{A@`{c}}}Kn}??{{{b{On}}}l}{{{b{d{A@`{c}}}}{b{d{Cn{j}}}}}{{Nf{l}}}Kn}{{{b{A@b}}{b{dc}}le}{{Kl{On}}}A@f{{A@j{{b{{Cn{{Cl{A@h}}}}}}{b{{Cn{{Cl{A@h}}}}}}}{{Jf{{Kl{h}}}}}}}}{{{b{A@b}}{b{dc}}e}{{Kl{On}}}A@f{{A@j{{b{{Cn{A@h}}}}{b{{Cn{A@h}}}}}{{Jf{{Kl{h}}}}}}}}{Onl}{bc{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00{{}c{}}00{lA@b}{{cl}{{A@`{c}}}Kn}{{lll}l}0```{{}Lh}{{}Lj}{{}Ll}{{{b{Lh}}{b{dc}}}{{Kl{A@l}}}Kn}{{{b{Ll}}{b{dc}}e}{{Kl{h}}}A@f{{A@j{{b{{Cn{A@h}}}}{b{{Cn{A@h}}}}}{{Jf{{Kl{h}}}}}}}}{{{b{Lj}}{b{A@l}}{b{dc}}}{{Kl{h}}}L`}`{{{b{{A@n{c}}}}}{{Ed{{b{{AA`{c}}}}}}}Bf}{{{b{d{A@n{c}}}}}{{Ed{{b{d{AA`{c}}}}}}}Bf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{d{A@n{c}}}}{b{{Cn{c}}}}}hBf}{{{b{{A@n{c}}}}}{{A@n{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{{{b{{A@n{c}}}}{b{d{A@n{c}}}}c}hBf}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{Ad{{A@n{e}}}}}Aj{EjBf}}{lh}{{{b{{A@n{c}}}}{b{{A@n{c}}}}}nBf}{{{b{{A@n{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}{{{b{{A@n{c}}}}}{{Cl{c}}}Bf}{{{b{{A@n{c}}}}}nBf}{{}l}{{}c{}}{A@nCl}{{lAhc}{{A@n{c}}}Bf}{{{b{{A@n{c}}}}}lBf}{{{b{d{A@n{c}}}}}hBf}{{{b{{A@n{c}}}}e}Ad{EnBf}Bb}{{{b{d{A@n{c}}}}Ah}hBf}{{{b{d{A@n{c}}}}c}hBf}{{{b{d{A@n{c}}}}{b{{Cn{c}}}}}{{Ad{h{b{An}}}}}Bf}5{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}};``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Ob}}}Ob}{{{b{A@l}}}A@l}{{b{b{dc}}}h{}}0{{bj}h}0{ObA@h}{l{{b{c}}}{}}0{l{{b{dc}}}{}}0{c{{Ad{Ob}}}Aj}{c{{Ad{A@l}}}Aj}{lh}0{{{b{Ob}}{b{Ob}}}n}{{{b{A@l}}{b{A@l}}}n}{{{b{Ob}}{b{dA`}}}Ab}{{{b{A@l}}{b{dA`}}}Ab}{cc{}}0{{}l}0{A@lCl}{{}c{}}0{ObCl}>{A@ll}0{Obl}14{{{b{Ob}}c}AdBb}{{{b{A@l}}c}AdBb}{bc{}}0{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{bAf}0{{}c{}}09```````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{AAb{c}}}{{Cd{c}}}Bf}{{{b{{Cd{c}}}}}{{Cd{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{{{AAb{c}}c}{{AAb{c}}}Bf}{AAb}{Cd}{{}{{AAb{c}}}Bf}{l{{b{c}}}{}}00{l{{b{dc}}}{}}00{c{{Ad{{Cd{e}}}}}Aj{EjBf}}{lh}00{{{b{Gj}}{b{dA`}}}Ab}0{{{b{{Cd{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}00{{{b{{Cn{j}}}}}{{Ad{{Cd{c}}Gj}}}{AAdBf}}{{{b{{Cd{c}}}}}lBf}{{{b{{Cd{c}}}}}{{Cl{c}}}Bf}{{{AAb{c}}l}{{AAb{c}}}Bf}{{{AAb{c}}lAhc}{{AAb{c}}}Bf}{{}l}002{{}c{}}00{AAbCl}{CdCl}{{{AAb{c}}{b{{Cn{l}}}}}{{AAb{c}}}Bf}{{}{{AAb{c}}}Bf}{{{b{{Cn{l}}}}}{{Cd{c}}}Bf}:::87{{{b{d{Cd{c}}}}cc}h{AAfBf}}{{{b{d{Cd{c}}}}}hBf}{{{b{d{Cd{c}}}}{b{{Cn{c}}}}}{{Cl{c}}}Bf}{{{b{d{Cd{c}}}}{b{{Cn{{Cl{c}}}}}}}{{Cl{{Cl{c}}}}}Bf}{{{b{{Cd{c}}}}e}Ad{EnBf}Bb}{{{b{d{Cd{c}}}}lAh}hBf}{{{b{d{Cd{c}}}}Ah}hBf}0{{{b{d{Cd{c}}}}c}hBf}0{{{b{d{Cd{c}}}}f}hBf}{{{b{d{Cd{c}}}}{b{{Cn{c}}}}}{{Ad{hGj}}}Bf}{{{b{{Cd{c}}}}}{{Cl{j}}}{EnBf}}{bc{}}{bDj}{{{b{{Cd{c}}}}}lBf}0{{{b{d{Cd{c}}}}{b{{Cn{{Cl{c}}}}}}{b{{Cn{{Cl{c}}}}}}A@hl}{{Ad{hGj}}}{AAhAAjAAlAAnBf}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bAf}00{{}c{}}00{AB`l}{ABbl}10`{AA`Ah}{AA`}{{{b{d{AA`{c}}}}lc}hBf}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{d{AA`{c}}}}{b{{Cn{c}}}}}hBf}{{{b{d{AA`{c}}}}}hBf}{{{b{{AA`{c}}}}}{{AA`{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{AA`Cl}{l{{b{c}}}{}}{l{{b{dc}}}{}}{c{{Ad{{AA`{e}}}}}Aj{EjBf}}{lh}{{{b{{AA`{c}}}}{b{{AA`{c}}}}}nBf}{{{b{{AA`{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}{{{b{{AA`{c}}}}l}{{Ed{c}}}Bf}{{}l}{{}c{}}{AA`n}{{Ahc}{{AA`{c}}}Bf}{{}{{AA`{c}}}Bf}{{{b{d{AA`{c}}}}}hBf}{{{b{{AA`{c}}}}e}Ad{EnBf}Bb}{{{b{d{AA`{c}}}}lc}{{Ad{h{b{An}}}}}Bf}{{{b{d{AA`{c}}}}c}hBf}{AA`}{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}4{{}c{}}```````````````````````{ABdFb}`{ABfl}{ABd}{ABhCl}{ABj}{b{{b{c}}}{}}00000000000000{{{b{d}}}{{b{dc}}}{}}00000000000000{{{b{ABl}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{ABn}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{AC`}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{ACb}}{b{{Cn{c}}}}{b{{Cn{c}}}}}cBf}{{{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}}cBf}{{{b{{ACf{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}}c{BfChK`}}{{{b{{ACh{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}}c{BfCh}}{{{b{{ACj{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}}c{BfCh}}{{{b{{ABh{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}}c{BfCh}}{{{b{dACd}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}nBf}{{{b{d{ACf{c}}}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}n{BfChK`}}{{{b{d{ACh{c}}}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}n{BfCh}}{{{b{d{ACj{c}}}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}n{BfCh}}{{{b{d{ABh{c}}}}l{b{{Cd{c}}}}{b{{Cb{c}}}}}n{BfCh}}{ACfEd}{AChEd}{ACjEd}{ABhEd}{{{b{{Cb{c}}}}}{{Cb{c}}}{DfBf}}{{{b{ABf}}}ABf}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{{ABd{c}}}}}{{ABd{c}}}{DfBf}}{{b{b{dc}}}h{}}00000{{bj}h}00000{{{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}lBf}{{{b{{ACf{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}l{BfChK`}}{{{b{{ACh{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}l{BfCh}}{{{b{{ACj{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}l{BfCh}}{{{b{{ABh{c}}}}{b{{Cd{c}}}}{b{{Cb{c}}}}c}l{BfCh}}{ACj}{ACl}{ABh}{{}{{ACj{c}}}{BfCh}}{{}{{ABh{c}}}{BfCh}}{{}ABf}333{l{{b{c}}}{}}00000000000000{l{{b{dc}}}{}}00000000000000{{{b{ABl}}cc}cBf}{{{b{ABn}}cc}cBf}{{{b{AC`}}cc}cBf}{{{b{ACb}}cc}cBf}{lh}00000000000000{ACn}{ABdl}{ACnl}{ACfKh}{AChKh}{ACjKh}{ABhKh}{{{b{{Cb{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{ABf}}{b{dA`}}}Ab}{{{b{Gh}}{b{dA`}}}Ab}0{{{b{{ABd{c}}}}{b{dA`}}}Ab{DnBf}}{cc{}}00000000000000{{{b{dAD`}}l}cBf}{{{b{d{ACl{c}}}}l}cBf}{{{b{d{ACn{c}}}}l}cBf}`{ABh}{{}l}00000000000000{ACl}{ACn}{CbCl}{{}c{}}00000000000000{ACf}{ACh}{ACj}210{{cc}{{ACl{c}}}Bf}{{ccl}{{ACn{c}}}Bf}{ABfl}7{ABfn}0{ACfCl}{AChCl}{ACjCl}0{ABhCl}32110`{{{b{dACd}}{ABd{c}}}hBf}{{{b{d{ACf{c}}}}{ABd{c}}}h{BfChK`}}{{{b{d{ACh{c}}}}{ABd{c}}}h{BfCh}}{{{b{d{ACj{c}}}}{ABd{c}}}h{BfCh}}{{{b{d{ABh{c}}}}{ABd{c}}}h{BfCh}}`{{{b{ACd}}}{{ABd{c}}}Bf}{{{b{{ACf{c}}}}}{{ABd{c}}}{BfChK`}}{{{b{{ACh{c}}}}}{{ABd{c}}}{BfCh}}{{{b{{ACj{c}}}}}{{ABd{c}}}{BfCh}}{{{b{{ABh{c}}}}}{{ABd{c}}}{BfCh}}{{{b{dACd}}{ADb{c}}}hBf}{{{b{d{ACf{c}}}}{ADb{c}}}h{BfChK`}}{{{b{d{ACh{c}}}}{ADb{c}}}h{BfCh}}{{{b{d{ACj{c}}}}{ADb{c}}}h{BfCh}}{{{b{d{ABh{c}}}}{ADb{c}}}h{BfCh}}{{{b{ADd}}{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}l}nBf}{{{b{{ADf{c}}}}{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}l}nBf}{{{b{{ABj{c}}}}{b{ACd}}{b{{Cd{c}}}}{b{{Cb{c}}}}l}nBf}{ABjl}{ADf}{bc{}}00000{bDj}{{{b{dACd}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}Bf}{{{b{d{ACf{c}}}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}{BfChK`}}{{{b{d{ACh{c}}}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}{BfCh}}{{{b{d{ACj{c}}}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}{BfCh}}{{{b{d{ABh{c}}}}{b{d{Cd{c}}}}{b{{Cb{c}}}}}{{Ad{cGh}}}{BfCh}}{c{{Ad{e}}}{}{}}00000000000000{{}{{Ad{c}}}{}}00000000000000{bAf}00000000000000{{}c{}}00000000000000{ABhCl}``{ACfEd}{AChEd}{ACfKh}{AChKh}{{{b{d{ACf{c}}}}{b{{Cd{c}}}}}h{BfChK`}}{{{b{d{ACh{c}}}}{b{{Cd{c}}}}}h{BfCh}}{ACf}{ACh}10{c{{ACf{c}}}{BfChK`}}{c{{ACh{c}}}{BfCh}}{ACfCl}{AChCl}10{{{ACf{c}}{Kh{ABl}}}{{ACf{c}}}{BfChK`}}{{{ACh{c}}{Kh{ABl}}}{{ACh{c}}}{BfCh}}{{{ACf{c}}c}{{ACf{c}}}{BfChK`}}{{{ACh{c}}c}{{ACh{c}}}{BfCh}}`{{{b{d{Cd{c}}}}{b{{Cn{{Cl{c}}}}}}{b{{Cn{{Cl{c}}}}}}}hBf}{ADhCl}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{ADh{c}}}}{b{{Cn{{Cl{c}}}}}}{b{{Cn{c}}}}{b{ABl}}}{{B`{{Cl{{Cl{c}}}}{Cl{{Cl{c}}}}}}}Bf}{{{b{{ADh{c}}}}}{{ADh{c}}}{DfBf}}{{b{b{dc}}}h{}}{{bj}h}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{{ADh{c}}}}{b{dA`}}}Ab{DnBf}}{{{b{{ADh{c}}}}{b{{Cn{c}}}}}{{Cl{{Cl{c}}}}}Bf}{cc{}}{{}l}{{}c{}}>{{{b{{Cd{c}}}}}{{ADh{c}}}{BfK`}}{ccBf}0{bc{}}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{bAf}{{}c{}}{ADhCl}`{{{b{{ACj{c}}}}cccc}c{BfCh}}{ACjEd}{ACj}{ACjKh}{{{b{d{ACj{c}}}}{b{{Cd{c}}}}}h{BfCh}}22{{}{{ACj{c}}}{BfCh}}{ACjCl}000{{{ACj{c}}{Kh{ABl}}}{{ACj{c}}}{BfCh}}{{{ACj{c}}ccc}{{ACj{c}}}{BfCh}}`{ABhCl}{ABhEd}{ABh}000{ABhKh}1{{{b{d{ABh{c}}}}{b{{Cd{c}}}}}h{BfCh}}{{}{{ABh{c}}}{BfCh}}55{{{b{{ABh{c}}}}ccc}c{BfCh}}6{{{ABh{c}}{Kh{ABl}}}{{ABh{c}}}{BfCh}}{{{ABh{c}}ccccc}{{ABh{c}}}{BfCh}}","D":"E@h","p":[[1,"reference",null,null,1],[0,"mut"],[6,"TrainingAlgorithm",0],[1,"unit"],[1,"u8"],[1,"usize"],[1,"bool"],[5,"Formatter",2093],[8,"Result",2093],[6,"Result",2094,null,1],[5,"TypeId",2095],[6,"ActivationFunction",58],[10,"Deserializer",2096],[10,"Hasher",2097],[1,"str"],[1,"tuple",null,null,1],[10,"Serializer",2098],[5,"CandidateNeuron",102],[10,"Float",2099],[5,"CascadeTrainingRecord",102],[5,"CascadeState",102],[5,"CascadeTrainer",102],[5,"CascadeBuilder",102],[5,"CascadeConfig",102],[5,"TrainingData",2077],[5,"Network",1543],[6,"RuvFannError",417],[10,"Send",2100],[10,"Sync",2100],[5,"Vec",2101],[1,"slice"],[5,"CascadeMetrics",102],[5,"Duration",2102],[5,"CascadeNetwork",102],[10,"Clone",2103],[5,"CascadeTrainingResult",102],[5,"String",2104],[6,"CascadeError",102],[10,"Debug",2093],[1,"f64"],[1,"u64"],[6,"Option",2105,null,1],[5,"StdRng",2106],[5,"Connection",390],[10,"Deserialize",2096],[10,"PartialEq",2107],[10,"Serialize",2098],[5,"ErrorContext",417],[5,"HashMap",2108],[5,"RecoveryContext",417],[6,"NetworkErrorCategory",417],[6,"TrainingErrorCategory",417],[6,"CascadeErrorCategory",417],[6,"ValidationErrorCategory",417],[6,"IoErrorCategory",417],[6,"ErrorCategory",417],[6,"RecoveryStrategy",417],[5,"ErrorLogger",417],[6,"ValidationError",417],[6,"TrainingError",2077],[6,"NetworkError",1543],[6,"Level",2109],[10,"Into",2110,null,1],[10,"Error",2111],[5,"SystemTime",2112],[15,"Performance",722],[15,"Memory",722],[15,"Network",722],[15,"Training",722],[15,"Cascade",722],[15,"Validation",722],[15,"Io",722],[15,"Parallel",722],[15,"Compatibility",722],[15,"OutOfRange",750],[15,"InvalidConfig",750],[15,"IncompatibleParams",750],[15,"DataFormat",750],[15,"MissingParameter",750],[5,"BenchmarkResult",758],[5,"RegressionDetector",758],[5,"FannCompatibilityValidator",758],[17,"Output"],[6,"IntegrationError",758],[10,"Fn",2113],[5,"IntegrationTestSuite",758],[5,"IntegrationResult",758],[10,"Default",2114],[5,"IntegrationConfig",758],[5,"CompatibilityTest",758],[5,"PhantomData",2100],[5,"Box",2115,null,1],[6,"FileFormat",1449],[8,"IoResult",1449,1303],[10,"Read",2116],[10,"Write",2116],[5,"DotExporter",1449,1291],[5,"FannReader",1449,1308],[5,"FannWriter",1449,1308],[5,"TrainingDataReader",1449,1446],[5,"TrainingDataWriter",1449,1446],[5,"TrainingDataStreamReader",1449,1446],[6,"IoError",1449,1303],[5,"ParseIntError",2117],[5,"ParseFloatError",2118],[5,"Error",2119],[5,"Error",2120],[8,"Error",2121],[6,"LayoutDirection",1291],[5,"BinaryConfig",1104],[5,"BinaryReader",1104],[5,"BinaryWriter",1104],[5,"CompressionConfig",1171],[5,"CompressedWriter",1171],[8,"Result",2119,null,1],[5,"CompressedReader",1171],[5,"GzDecoder",2122],[5,"GzEncoder",2123],[1,"u32"],[5,"CompressionStats",1242],[5,"MockNetwork",1491],[10,"FromStr",2124],[10,"Display",2093],[5,"JsonConfig",1314],[5,"JsonReader",1314],[5,"JsonWriter",1314],[5,"StreamStats",1378],[5,"BufferedStreamReader",1378],[5,"TrainingDataStreamReader",1378],[5,"BufReader",2125],[10,"BufRead",2116],[1,"f32"],[10,"FnMut",2113],[5,"MockTrainingData",1491],[5,"Layer",1455],[5,"Neuron",1636],[5,"NetworkBuilder",1543],[10,"DeserializeOwned",2096],[10,"SampleUniform",2126],[10,"AddAssign",2127],[10,"SubAssign",2127],[10,"MulAssign",2127],[10,"PartialOrd",2107],[15,"InputSizeMismatch",1632],[15,"WeightCountMismatch",1632],[5,"TrainingState",2077],[5,"ParallelTrainingOptions",2077],[5,"Rprop",2077,2076],[5,"BitFailStopCriteria",2077],[10,"ErrorFunction",2077],[5,"MseError",2077],[5,"MaeError",2077],[5,"TanhError",2077],[10,"TrainingAlgorithm",2077],[5,"IncrementalBackprop",2077,2012],[5,"BatchBackprop",2077,2012],[5,"Quickprop",2077,2061],[5,"ExponentialDecay",2077],[5,"StepDecay",2077],[10,"LearningRateSchedule",2077],[8,"TrainingCallback",2077],[10,"StopCriteria",2077],[5,"MseStopCriteria",2077],[5,"SimpleNetwork",2034],[8,"RuvFannResult",417]],"r":[[0,58],[4,102],[5,102],[6,102],[7,102],[8,390],[9,417],[11,1455],[12,1543],[13,1543],[14,1543],[15,1636],[16,2077],[19,417],[22,2077],[23,2077],[24,2077],[25,417],[949,1303],[951,1291],[952,1303],[954,1308],[955,1308],[957,1303],[958,1303],[959,1303],[960,1303],[961,1303],[962,1303],[964,1303],[965,1303],[966,1303],[967,1446],[968,1446],[969,1446],[971,1291],[972,1308],[973,1308],[974,1446],[975,1446],[976,1446],[977,1303],[979,1291],[980,1308],[981,1308],[982,1446],[983,1446],[984,1446],[985,1303],[990,1171],[992,1171],[993,1291],[994,1308],[995,1308],[996,1446],[997,1446],[998,1446],[999,1291],[1000,1308],[1001,1308],[1002,1446],[1003,1446],[1004,1446],[1005,1303],[1007,1291],[1008,1308],[1009,1308],[1010,1446],[1011,1446],[1012,1446],[1013,1303],[1016,1291],[1017,1308],[1018,1308],[1019,1446],[1020,1446],[1021,1446],[1022,1303],[1027,1303],[1028,1303],[1030,1291],[1031,1308],[1032,1308],[1033,1446],[1034,1446],[1035,1446],[1036,1303],[1037,1303],[1038,1303],[1039,1303],[1040,1303],[1041,1303],[1043,1291],[1044,1308],[1045,1308],[1046,1446],[1047,1446],[1048,1446],[1049,1303],[1051,1291],[1052,1308],[1053,1308],[1054,1446],[1055,1446],[1056,1446],[1057,1303],[1060,1291],[1061,1104],[1062,1314],[1063,1291],[1064,1291],[1065,1303],[1068,1303],[1070,1291],[1071,1308],[1072,1308],[1073,1446],[1074,1446],[1075,1446],[1076,1303],[1078,1291],[1079,1308],[1080,1308],[1081,1446],[1082,1446],[1083,1446],[1084,1303],[1086,1291],[1087,1308],[1088,1308],[1089,1446],[1090,1446],[1091,1446],[1092,1303],[1094,1291],[1095,1308],[1096,1308],[1097,1446],[1098,1446],[1099,1446],[1100,1303],[1102,1104],[1103,1314],[1282,1291],[1287,1291],[1288,1291],[1289,1291],[1290,1291],[1296,1291],[1297,1303],[1298,1303],[1299,1303],[1300,1303],[1301,1303],[1302,1303],[1305,1303],[1306,1303],[1307,1303],[1310,1308],[1311,1308],[1312,1308],[1313,1308],[1449,1446],[1450,1446],[1451,1446],[1452,1446],[1453,1446],[1454,1446],[1672,2012],[1676,2012],[1684,2061],[1685,2076],[1699,2076],[1705,2012],[1706,2012],[1707,2061],[1708,2076],[1720,2012],[1721,2012],[1722,2061],[1723,2076],[1736,2012],[1737,2012],[1738,2061],[1739,2076],[1741,2012],[1742,2012],[1743,2061],[1744,2076],[1745,2012],[1746,2012],[1747,2061],[1748,2076],[1768,2012],[1769,2012],[1770,2061],[1771,2076],[1772,2061],[1774,2076],[1775,2061],[1776,2076],[1778,2076],[1779,2076],[1780,2076],[1785,2012],[1786,2012],[1787,2061],[1788,2076],[1800,2012],[1801,2012],[1802,2061],[1803,2076],[1819,2012],[1820,2012],[1821,2061],[1822,2076],[1833,2012],[1834,2012],[1835,2061],[1836,2076],[1846,2012],[1847,2012],[1848,2061],[1849,2076],[1861,2076],[1866,2012],[1867,2012],[1868,2061],[1869,2076],[1884,2012],[1885,2012],[1886,2061],[1887,2076],[1895,2012],[1896,2012],[1897,2061],[1898,2012],[1899,2012],[1900,2061],[1907,2012],[1908,2012],[1909,2061],[1910,2061],[1911,2076],[1912,2012],[1913,2012],[1914,2061],[1915,2061],[1916,2076],[1919,2012],[1920,2012],[1921,2061],[1922,2076],[1925,2012],[1926,2012],[1927,2061],[1928,2076],[1930,2012],[1931,2012],[1932,2061],[1933,2076],[1947,2012],[1948,2012],[1949,2061],[1950,2076],[1955,2012],[1956,2012],[1957,2061],[1958,2076],[1970,2012],[1971,2012],[1972,2061],[1973,2076],[1985,2012],[1986,2012],[1987,2061],[1988,2076],[2000,2012],[2001,2012],[2002,2061],[2003,2076],[2011,2076],[2014,2012],[2015,2012],[2016,2012],[2017,2012],[2018,2012],[2019,2012],[2020,2012],[2021,2012],[2022,2012],[2023,2012],[2024,2012],[2025,2012],[2026,2012],[2027,2012],[2028,2012],[2029,2012],[2030,2012],[2031,2012],[2032,2012],[2033,2012],[2062,2061],[2063,2061],[2064,2061],[2065,2061],[2066,2061],[2067,2061],[2068,2061],[2069,2061],[2070,2061],[2071,2061],[2072,2061],[2073,2061],[2074,2061],[2075,2061],[2077,2076],[2078,2076],[2079,2076],[2080,2076],[2081,2076],[2082,2076],[2083,2076],[2084,2076],[2085,2076],[2086,2076],[2087,2076],[2088,2076],[2089,2076],[2090,2076],[2091,2076],[2092,2076]],"b":[[232,"impl-Debug-for-CascadeError"],[233,"impl-Display-for-CascadeError"],[585,"impl-Debug-for-RuvFannError"],[586,"impl-Display-for-RuvFannError"],[593,"impl-Display-for-ValidationError"],[594,"impl-Debug-for-ValidationError"],[599,"impl-From%3CTrainingError%3E-for-RuvFannError"],[601,"impl-From%3CNetworkError%3E-for-RuvFannError"],[837,"impl-Display-for-IntegrationError"],[838,"impl-Debug-for-IntegrationError"],[1027,"impl-Display-for-IoError"],[1028,"impl-Debug-for-IoError"],[1036,"impl-From%3CParseIntError%3E-for-IoError"],[1038,"impl-From%3CParseFloatError%3E-for-IoError"],[1039,"impl-From%3CError%3E-for-IoError"],[1040,"impl-From%3CError%3E-for-IoError"],[1041,"impl-From%3CBox%3CErrorKind%3E%3E-for-IoError"],[1574,"impl-Debug-for-NetworkError"],[1575,"impl-Display-for-NetworkError"],[1839,"impl-Display-for-TrainingError"],[1840,"impl-Debug-for-TrainingError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKkFrwABABMAFgAHAB8ACAApAAAAKwAAAC8AAAAxAAAAMwABADYABABOAAsAWwABAGEABgBpAAAAcwAFAHsAAACBABQAmgAAAJ0AAAChAAEApAAUALoAAAC8AAEAvwAAAMIALwD+AAAAAAEKABYBAAAYAQAAGgEAAB8BAAAhAQAAJAEAACcBAAArAQIAMAEAADIBAAA1AQAAOAELAEUBAABMAQAAUQEeAHEBAAB3AQAAeQEJAIgBCgCVAQAAmAEAAJsBAwCgAQAAqQEAAK0BAACxAQAAuwEAAL0BAAC/AQAAxQEBAMgBAADNAQAA0QEAANMBAADiAQAA5gEAAOoBbABYAgAAWgIAAGUCDAB+AnkA+gIBAAEDAAADAxgAHQMtAFUDBwBnAwIAawMDAHADAQB3AwAAfwMAAIIDAACEAwAAiAMgAKoDCADMAxIA4gMVAPkDCAAEBAIADQQAAA8EAwAUBAcAKgQAACwEAQAvBB8AVAQIAF4EDQBtBAAAcQQCAIAECQCLBAIAmQQIAKYECQCzBAEAvAQEAMkEDQDaBAAA3AQFAOMEAwDoBAAA6gQCAO8EBAD6BAgABAUAAAYFAAAMBQQAJgUIADAFDgBDBQIAUQUMAGcFBQBvBRIAhQUDAI8FAQCSBQAAlQUNALMFAQC2BQIAugUFAMMFAADJBQAAzgUEANYFFgDvBQIA9AUVAA0GBwAWBgIAGgYAABwGDQAyBgIAOQYAAEcGAABQBgEAVQYPAGkGAQBtBgIAcQYFAHkGAAB/BgAAgwYDAIgGAACOBgAAkwYAAJwGAACeBgAAoAYAAKMGIADFBgIAyQYDAM4GGQDpBioAFQcdAEIHAgBGBxIAaAcHAHEHAAB0BwkAgAcDAIYHAwCLBw8AnAdAAN8HEwD1BwIA+QcGAAIIAAAECAAACAgFAA8IDQAeCA8A","P":[[27,"T"],[31,""],[32,"T"],[33,""],[35,"T"],[37,""],[41,"T"],[42,""],[44,"U"],[51,"T"],[54,"U,T"],[55,"U"],[56,""],[57,"V"],[77,"T"],[79,""],[80,"T"],[81,""],[83,"T"],[85,"__D"],[86,""],[89,"T"],[90,"__H"],[91,""],[92,"U"],[93,""],[96,"__S"],[97,"T"],[98,"U,T"],[99,"U"],[100,""],[101,"V"],[120,""],[121,"T"],[122,""],[128,"T"],[155,""],[156,"T"],[157,""],[163,"T"],[168,""],[169,"T"],[177,""],[193,"T"],[196,""],[197,"T"],[218,""],[228,"T"],[229,""],[234,"T"],[239,""],[240,"T"],[252,""],[266,"T"],[267,"U"],[277,"T"],[278,""],[287,"T"],[292,""],[294,"T"],[295,""],[300,"T"],[301,""],[304,"T"],[306,""],[311,"T"],[319,""],[323,"T"],[333,""],[337,"U,T"],[347,"U"],[357,""],[367,"T"],[370,""],[372,"T"],[375,""],[376,"V"],[386,""],[391,"T"],[395,""],[396,"T"],[398,"__D,T"],[399,""],[400,"T"],[403,""],[405,"U"],[406,"T"],[407,"T,__S"],[408,"T"],[409,""],[410,"T"],[411,"U,T"],[412,"U"],[413,""],[414,"T"],[415,"V"],[416,""],[490,"T"],[514,""],[523,"T"],[531,""],[541,"T"],[565,""],[598,"T"],[599,""],[600,"T"],[601,""],[602,"T"],[612,""],[625,"U"],[637,""],[656,"T"],[664,""],[666,"U,T"],[678,"U"],[690,""],[702,"V"],[714,""],[773,"T,F"],[774,""],[779,"T"],[796,""],[800,"T"],[803,""],[809,"T"],[810,""],[811,"T"],[827,""],[842,"T"],[852,""],[860,"U"],[868,"T"],[869,""],[873,"T"],[875,""],[882,"T"],[884,""],[885,"T"],[889,""],[890,"T"],[894,""],[895,"T"],[896,""],[898,"T"],[899,""],[901,"T"],[903,""],[907,"T"],[910,""],[912,"U,T"],[920,"U"],[928,""],[937,"V"],[945,""],[971,"T"],[987,""],[988,"T"],[989,""],[990,"R,W"],[993,""],[999,"T"],[1016,""],[1030,"T"],[1036,""],[1037,"T"],[1038,""],[1042,"T"],[1043,""],[1051,"U"],[1060,""],[1061,"R,T"],[1063,""],[1067,"T"],[1068,""],[1070,"U,T"],[1078,"U"],[1086,""],[1094,"V"],[1102,"T,W"],[1107,"T"],[1113,""],[1114,"T"],[1115,""],[1122,"T"],[1128,""],[1133,"T"],[1136,""],[1140,"U"],[1143,""],[1147,"R,T"],[1150,"T"],[1152,"U,T"],[1155,"U"],[1158,""],[1162,"V"],[1165,""],[1167,"T,W"],[1169,"T"],[1175,""],[1176,"T"],[1182,""],[1183,"T"],[1184,""],[1186,"R,W"],[1187,""],[1188,"R,W"],[1189,""],[1190,"T"],[1196,""],[1201,"W"],[1203,""],[1204,"T"],[1207,"R"],[1208,"W"],[1209,"R"],[1210,"W"],[1211,""],[1216,"U"],[1219,"R"],[1220,""],[1221,"R"],[1222,"W"],[1223,""],[1224,"R"],[1225,"T"],[1226,"U,T"],[1229,"U"],[1232,""],[1235,"V"],[1238,"W"],[1240,""],[1241,"W"],[1243,"T"],[1245,""],[1246,"T"],[1247,""],[1250,"T"],[1252,""],[1254,"T"],[1255,""],[1256,"U"],[1257,""],[1262,"T"],[1263,"U,T"],[1264,"U"],[1265,""],[1266,"V"],[1273,"T"],[1275,""],[1276,"T"],[1277,""],[1278,"T"],[1280,""],[1282,"W"],[1283,""],[1284,"T"],[1285,""],[1286,"U"],[1287,""],[1291,"T"],[1292,"U,T"],[1293,"U"],[1294,""],[1295,"V"],[1296,""],[1312,"R,T"],[1313,"T,W"],[1317,"T"],[1323,""],[1324,"T"],[1325,""],[1332,"T"],[1338,""],[1342,"T"],[1345,""],[1349,"U"],[1352,""],[1357,"R,T"],[1360,"T"],[1361,"U,T"],[1364,"U"],[1367,""],[1370,"V"],[1373,""],[1375,"T,W"],[1381,""],[1382,"T"],[1388,"R"],[1390,""],[1394,"T"],[1395,""],[1396,"R"],[1397,""],[1398,"T"],[1404,""],[1407,"R"],[1408,""],[1409,"T"],[1412,""],[1416,"U"],[1420,""],[1421,"R"],[1422,""],[1425,"R"],[1426,"R,F"],[1428,""],[1429,"T"],[1430,"U,T"],[1433,"U"],[1436,""],[1439,"V"],[1442,""],[1443,"R"],[1444,""],[1452,"R"],[1453,"R,F"],[1454,"W"],[1456,"T"],[1463,""],[1464,"T"],[1467,"__D,T"],[1468,""],[1469,"T"],[1474,""],[1475,"U"],[1476,""],[1477,"T"],[1480,"T,__S"],[1481,"T"],[1486,"U,T"],[1487,"U"],[1488,""],[1489,"V"],[1490,"T"],[1497,""],[1499,"T"],[1501,""],[1504,"T"],[1508,"__D"],[1510,""],[1516,"T"],[1518,""],[1521,"U"],[1523,""],[1530,"__S"],[1532,"T"],[1534,"U,T"],[1536,"U"],[1538,""],[1540,"V"],[1542,""],[1550,"T"],[1559,""],[1560,"T"],[1561,""],[1563,"T"],[1570,"__D,T"],[1571,""],[1576,"T"],[1585,""],[1588,"T"],[1589,"U"],[1592,""],[1594,"T"],[1606,"T,__S"],[1607,"T"],[1616,""],[1617,"T"],[1620,"U,T"],[1623,"U"],[1626,""],[1629,"V"],[1632,""],[1639,"T"],[1646,""],[1648,"T"],[1650,"__D,T"],[1651,""],[1652,"T"],[1656,""],[1657,"U"],[1658,""],[1659,"T"],[1662,"T,__S"],[1663,"T"],[1665,""],[1666,"T"],[1667,"U,T"],[1668,"U"],[1669,""],[1671,"V"],[1695,""],[1701,"T"],[1745,""],[1749,"T"],[1750,""],[1754,"T"],[1761,""],[1767,"T"],[1772,""],[1775,"T"],[1777,""],[1781,"T"],[1815,""],[1837,"T"],[1838,""],[1841,"T"],[1861,""],[1880,"U"],[1895,""],[1901,"T"],[1903,""],[1918,"T"],[1937,""],[1939,"T"],[1945,""],[1946,"T"],[1951,"U,T"],[1966,"U"],[1981,""],[1996,"V"],[2011,""],[2018,"T"],[2020,""],[2024,"T"],[2026,""],[2030,"T"],[2036,""],[2037,"T"],[2042,""],[2043,"T"],[2045,""],[2046,"T"],[2049,""],[2050,"U"],[2051,""],[2052,"T"],[2056,"U,T"],[2057,"U"],[2058,""],[2059,"V"],[2060,""],[2062,"T"],[2063,""],[2066,"T"],[2067,""],[2069,"T"],[2070,""],[2074,"T"],[2077,""],[2085,"T"],[2087,""],[2089,"T"],[2090,""],[2091,"T"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[55125]}